{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mapbox-travel-advisor-master\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport getPlacesData from \"./api/index\";\nimport Header from \"./components/Header/Header\";\nimport List from \"./components/List/List\";\nimport Map from \"./components/Map/Map\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [filteredPlaces, setFilteredPlaces] = useState([]);\n  const [bounds, setBounds] = useState({});\n  const [clickedMarker, setClickedMarker] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [type, setType] = useState(\"restaurants\");\n  const [rating, setRating] = useState(\"\");\n  const geocoderContainerRef = /*#__PURE__*/createRef();\n  const [mode, setMode] = React.useState('light');\n  const theme = createTheme({\n    palette: {\n      mode: mode\n    }\n  });\n  useEffect(() => {\n    setIsLoading(true);\n    let CancelToken = axios.CancelToken;\n    let source = CancelToken.source();\n    getPlacesData(type, bounds.ne, bounds.sw, source).then(data => {\n      if (data !== undefined) {\n        setPlaces(data); // console.log(`fetched ${type}`)\n\n        setFilteredPlaces([]);\n        /*\n            setFilteredPlaces(places.filter(place => place.rating > rating))\n            If do this, all the data became filtered previous type data,\n            e.g, user requests for hotels, but the map and list show previous filtered restaurants,\n                 since map and list was designed to show filtered places instead of places.\n            so it is better to do setFilteredPlaces empty and setRating empty\n        */\n\n        setRating(\"\");\n        setIsLoading(false);\n      }\n    });\n    return () => source.cancel('Cancelled due to new request coming in');\n  }, [type, bounds]);\n  useEffect(() => {\n    setFilteredPlaces(places.filter(place => place.rating > rating));\n  }, [rating]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        containerRef: geocoderContainerRef,\n        mode: mode,\n        setMode: setMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          items: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            places: filteredPlaces.length ? filteredPlaces : places,\n            clickedMarker: clickedMarker,\n            isLoading: isLoading,\n            type: type,\n            setType: setType,\n            rating: rating,\n            setRating: setRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          items: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            setBounds: setBounds,\n            places: filteredPlaces.length ? filteredPlaces : places,\n            setClickedMarker: setClickedMarker,\n            containerRef: geocoderContainerRef,\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Cp+NYWMVTNKgbSmPTxVJrM/baog=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/mapbox-travel-advisor-master/src/App.js"],"names":["React","useEffect","useState","createRef","CssBaseline","Grid","ThemeProvider","createTheme","getPlacesData","Header","List","Map","axios","App","places","setPlaces","filteredPlaces","setFilteredPlaces","bounds","setBounds","clickedMarker","setClickedMarker","isLoading","setIsLoading","type","setType","rating","setRating","geocoderContainerRef","mode","setMode","theme","palette","CancelToken","source","ne","sw","then","data","undefined","cancel","filter","place","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport {ThemeProvider, createTheme} from '@mui/material/styles';\n\nimport getPlacesData from \"./api/index\";\n\nimport Header from \"./components/Header/Header\";\nimport List from \"./components/List/List\";\nimport Map from \"./components/Map/Map\";\nimport axios from 'axios'\n\nconst App = () => {\n    const [places, setPlaces] = useState([]);\n    const [filteredPlaces, setFilteredPlaces] = useState([]);\n    const [bounds, setBounds] = useState({});\n    const [clickedMarker, setClickedMarker] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [type, setType] = useState(\"restaurants\");\n    const [rating, setRating] = useState(\"\");\n    const geocoderContainerRef = createRef();\n    const [mode, setMode] = React.useState('light');\n\n    const theme = createTheme({\n        palette: {\n            mode: mode\n        }\n    })\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        let CancelToken = axios.CancelToken;\n        let source = CancelToken.source();\n\n        getPlacesData(type, bounds.ne, bounds.sw, source).then((data) => {\n            if (data !== undefined) {\n                setPlaces(data);\n                // console.log(`fetched ${type}`)\n                setFilteredPlaces([]);\n                /*\n                    setFilteredPlaces(places.filter(place => place.rating > rating))\n                    If do this, all the data became filtered previous type data,\n                    e.g, user requests for hotels, but the map and list show previous filtered restaurants,\n                         since map and list was designed to show filtered places instead of places.\n                    so it is better to do setFilteredPlaces empty and setRating empty\n                */\n                setRating(\"\")\n                setIsLoading(false);\n            }\n        })\n\n        return () => source.cancel('Cancelled due to new request coming in')\n    }, [type, bounds]);\n\n    useEffect(() => {\n        setFilteredPlaces(places.filter(place => place.rating > rating))\n    }, [rating])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <CssBaseline/>\n                <Header containerRef={geocoderContainerRef} mode={mode} setMode={setMode}/>\n\n                <Grid container>\n                    <Grid items xs={12} md={4}>\n                        <List\n                            places={filteredPlaces.length ? filteredPlaces : places}\n                            clickedMarker={clickedMarker}\n                            isLoading={isLoading}\n                            type={type}\n                            setType={setType}\n                            rating={rating}\n                            setRating={setRating}\n                        />\n                    </Grid>\n                    <Grid items xs={12} md={8}>\n                        <Map\n                            setBounds={setBounds}\n                            places={filteredPlaces.length ? filteredPlaces : places}\n                            setClickedMarker={setClickedMarker}\n                            containerRef={geocoderContainerRef}\n                            mode={mode}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}